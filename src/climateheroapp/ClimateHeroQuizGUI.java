package climateheroapp;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Vitor Colley
 */
public class ClimateHeroQuizGUI extends javax.swing.JFrame {

    private String result1, result2, result3, result4, result5;
    private String correction1, correction2, correction3, correction4, correction5;
    private int level1, level2, level3, level4, level5;
    private int totalScore;
    /**
     * Creates new form ClimateHeroQuizGUI
     */
    public ClimateHeroQuizGUI() {
        initComponents();

        q1Lbl.setVisible(false);
        q1Ta.setVisible(false);
        q1O1Rb.setVisible(false);
        q1O2Rb.setVisible(false);
        q1O3Rb.setVisible(false);
        q1O4Rb.setVisible(false);
        
        q2Lbl.setVisible(false);
        q2Ta.setVisible(false);
        q2O1Rb.setVisible(false);
        q2O2Rb.setVisible(false);
        q2O3Rb.setVisible(false);
        q2O4Rb.setVisible(false);
        
        q3Lbl.setVisible(false);
        q3Ta.setVisible(false);
        q3O1Rb.setVisible(false);
        q3O2Rb.setVisible(false);
        q3O3Rb.setVisible(false);
        q3O4Rb.setVisible(false);
       
        q4Lbl.setVisible(false);
        q4Ta.setVisible(false);
        q4O1Rb.setVisible(false);
        q4O2Rb.setVisible(false);
        q4O3Rb.setVisible(false);
        q4O4Rb.setVisible(false);
        
        q5Lbl.setVisible(false);
        q5Ta.setVisible(false);
        q5O1Rb.setVisible(false);
        q5O2Rb.setVisible(false);
        q5O3Rb.setVisible(false);
        q5O4Rb.setVisible(false);
        
        subQuizBtn.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeBg = new javax.swing.ButtonGroup();
        options1Bg = new javax.swing.ButtonGroup();
        options2Bg = new javax.swing.ButtonGroup();
        options3Bg = new javax.swing.ButtonGroup();
        options4Bg = new javax.swing.ButtonGroup();
        options5Bg = new javax.swing.ButtonGroup();
        quizLbl = new javax.swing.JLabel();
        quizTypeLbl = new javax.swing.JLabel();
        mcqRb = new javax.swing.JRadioButton();
        booleanRb = new javax.swing.JRadioButton();
        tryQuizBtn = new javax.swing.JButton();
        manageQBtn = new javax.swing.JButton();
        q1Lbl = new javax.swing.JLabel();
        q1O1Rb = new javax.swing.JRadioButton();
        q1O4Rb = new javax.swing.JRadioButton();
        q1O2Rb = new javax.swing.JRadioButton();
        q1O3Rb = new javax.swing.JRadioButton();
        q1Ta = new javax.swing.JLabel();
        subQuizBtn = new javax.swing.JButton();
        q2Lbl = new javax.swing.JLabel();
        q2O1Rb = new javax.swing.JRadioButton();
        q2O4Rb = new javax.swing.JRadioButton();
        q2O2Rb = new javax.swing.JRadioButton();
        q2O3Rb = new javax.swing.JRadioButton();
        q2Ta = new javax.swing.JLabel();
        q3Lbl = new javax.swing.JLabel();
        q3O1Rb = new javax.swing.JRadioButton();
        q3O4Rb = new javax.swing.JRadioButton();
        q3O2Rb = new javax.swing.JRadioButton();
        q3O3Rb = new javax.swing.JRadioButton();
        q3Ta = new javax.swing.JLabel();
        q4Lbl = new javax.swing.JLabel();
        q4O1Rb = new javax.swing.JRadioButton();
        q4O4Rb = new javax.swing.JRadioButton();
        q4O2Rb = new javax.swing.JRadioButton();
        q4O3Rb = new javax.swing.JRadioButton();
        q4Ta = new javax.swing.JLabel();
        q5Lbl = new javax.swing.JLabel();
        q5O1Rb = new javax.swing.JRadioButton();
        q5O4Rb = new javax.swing.JRadioButton();
        q5O2Rb = new javax.swing.JRadioButton();
        q5O3Rb = new javax.swing.JRadioButton();
        q5Ta = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 255));

        quizLbl.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        quizLbl.setForeground(new java.awt.Color(255, 153, 153));
        quizLbl.setText("Welcome to the Climate Hero Quiz!");

        quizTypeLbl.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        quizTypeLbl.setForeground(new java.awt.Color(0, 153, 153));
        quizTypeLbl.setText("Select Quiz Type:");

        typeBg.add(mcqRb);
        mcqRb.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        mcqRb.setForeground(new java.awt.Color(0, 153, 153));
        mcqRb.setText("Multiple Choice");
        mcqRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcqRbActionPerformed(evt);
            }
        });

        typeBg.add(booleanRb);
        booleanRb.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        booleanRb.setForeground(new java.awt.Color(0, 153, 153));
        booleanRb.setText("True or False");

        tryQuizBtn.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        tryQuizBtn.setForeground(new java.awt.Color(0, 153, 153));
        tryQuizBtn.setText("Try Quiz");
        tryQuizBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tryQuizBtnActionPerformed(evt);
            }
        });

        manageQBtn.setText("Manage Questions");
        manageQBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageQBtnActionPerformed(evt);
            }
        });

        q1Lbl.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        q1Lbl.setText("Question 1:");

        options1Bg.add(q1O1Rb);
        q1O1Rb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q1O1RbActionPerformed(evt);
            }
        });

        options1Bg.add(q1O4Rb);

        options1Bg.add(q1O2Rb);

        options1Bg.add(q1O3Rb);

        subQuizBtn.setBackground(new java.awt.Color(51, 255, 255));
        subQuizBtn.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        subQuizBtn.setText("Submit Quiz");
        subQuizBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subQuizBtnActionPerformed(evt);
            }
        });

        q2Lbl.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        q2Lbl.setText("Question 2:");

        options2Bg.add(q2O1Rb);
        q2O1Rb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q2O1RbActionPerformed(evt);
            }
        });

        options2Bg.add(q2O4Rb);

        options2Bg.add(q2O2Rb);

        options2Bg.add(q2O3Rb);

        q3Lbl.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        q3Lbl.setText("Question 3:");

        options3Bg.add(q3O1Rb);
        q3O1Rb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q3O1RbActionPerformed(evt);
            }
        });

        options3Bg.add(q3O4Rb);

        options3Bg.add(q3O2Rb);

        options3Bg.add(q3O3Rb);

        q4Lbl.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        q4Lbl.setText("Question 4:");

        options4Bg.add(q4O1Rb);
        q4O1Rb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q4O1RbActionPerformed(evt);
            }
        });

        options4Bg.add(q4O4Rb);

        options4Bg.add(q4O2Rb);

        options4Bg.add(q4O3Rb);

        q5Lbl.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        q5Lbl.setText("Question 5:");

        options5Bg.add(q5O1Rb);
        q5O1Rb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q5O1RbActionPerformed(evt);
            }
        });

        options5Bg.add(q5O4Rb);

        options5Bg.add(q5O2Rb);

        options5Bg.add(q5O3Rb);

        backBtn.setBackground(new java.awt.Color(204, 204, 255));
        backBtn.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(quizTypeLbl)
                                .addGap(536, 536, 536)
                                .addComponent(manageQBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(183, 183, 183)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(quizLbl)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(mcqRb)
                                        .addGap(31, 31, 31)
                                        .addComponent(booleanRb))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(q1O1Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(q1O2Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(q1O3Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(q1O4Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(q1Lbl)
                            .addComponent(q1Ta, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(q2O1Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(q2O2Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(q2O3Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(q2O4Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(q2Lbl)
                            .addComponent(q2Ta, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(subQuizBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(q3Lbl)
                                        .addComponent(q3Ta, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(q3O1Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(q3O2Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(q3O3Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(q3O4Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tryQuizBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(backBtn)
                                        .addGap(5, 5, 5)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(q4O1Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(q4O2Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(q4O3Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(q4O4Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(q4Lbl)
                                    .addComponent(q4Ta, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(q5O1Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(q5O2Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(q5O3Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(q5O4Rb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(q5Ta, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(q5Lbl))))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(quizLbl)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(manageQBtn)
                    .addComponent(quizTypeLbl))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mcqRb)
                    .addComponent(booleanRb))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tryQuizBtn)
                    .addComponent(backBtn))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(q3Lbl)
                        .addGap(29, 29, 29)
                        .addComponent(q3Ta, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(q3O1Rb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q3O2Rb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q3O3Rb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q3O4Rb))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(q2Lbl)
                            .addGap(29, 29, 29)
                            .addComponent(q2Ta, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(q2O1Rb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(q2O2Rb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(q2O3Rb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(q2O4Rb))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(q1Lbl)
                            .addGap(29, 29, 29)
                            .addComponent(q1Ta, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(q1O1Rb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(q1O2Rb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(q1O3Rb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(q1O4Rb))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(q5Lbl)
                            .addGap(29, 29, 29)
                            .addComponent(q5Ta, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(q5O1Rb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(q5O2Rb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(q5O3Rb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(q5O4Rb))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(q4Lbl)
                            .addGap(29, 29, 29)
                            .addComponent(q4Ta, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(q4O1Rb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(q4O2Rb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(q4O3Rb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(q4O4Rb))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(subQuizBtn)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mcqRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcqRbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mcqRbActionPerformed

    private void tryQuizBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tryQuizBtnActionPerformed
        // This section generates the quiz:
        
        quizTypeLbl.setVisible(false);
        mcqRb.setVisible(false);
        booleanRb.setVisible(false);
        tryQuizBtn.setVisible(false);
        manageQBtn.setVisible(false);
        
        q1Lbl.setVisible(true);
        q1Ta.setVisible(true);
        q1O1Rb.setVisible(true);
        q1O2Rb.setVisible(true);
        q1O3Rb.setVisible(true);
        q1O4Rb.setVisible(true);
        
        q2Lbl.setVisible(true);
        q2Ta.setVisible(true);
        q2O1Rb.setVisible(true);
        q2O2Rb.setVisible(true);
        q2O3Rb.setVisible(true);
        q2O4Rb.setVisible(true);
        
        q3Lbl.setVisible(true);
        q3Ta.setVisible(true);
        q3O1Rb.setVisible(true);
        q3O2Rb.setVisible(true);
        q3O3Rb.setVisible(true);
        q3O4Rb.setVisible(true);
        
        q4Lbl.setVisible(true);
        q4Ta.setVisible(true);
        q4O1Rb.setVisible(true);
        q4O2Rb.setVisible(true);
        q4O3Rb.setVisible(true);
        q4O4Rb.setVisible(true);
        
        q5Lbl.setVisible(true);
        q5Ta.setVisible(true);
        q5O1Rb.setVisible(true);
        q5O2Rb.setVisible(true);
        q5O3Rb.setVisible(true);
        q5O4Rb.setVisible(true);
        
        subQuizBtn.setVisible(true);
        backBtn.setVisible(false);
 
        double number1, number2, number3, number4, number5;
        
        //This generates a MCQ quiz directly from the document.
        if (mcqRb.isSelected()) {
                        
            File inFile;
            FileInputStream fStream;
            ObjectInputStream oStream;
            
            //This part counts how many questions there are in the file so it can randomize up to the correct number
            int count = 0;
            
            try {
                inFile = new File("outputM.data");
                fStream = new FileInputStream(inFile);
                oStream = new ObjectInputStream(fStream);

                ArrayList<MultipleChoice> mList;
                mList = (ArrayList<MultipleChoice>) oStream.readObject();

                
                for (MultipleChoice m : mList) {
                    count++;
                    }
                
                oStream.close();
            } catch (IOException e) {
                System.out.println(e);
            } catch (ClassNotFoundException ex) {
                System.out.println(ex);
            }

            try {
                inFile = new File("outputM.data");
                fStream = new FileInputStream(inFile);
                oStream = new ObjectInputStream(fStream);

                ArrayList<MultipleChoice> mList;
                mList = (ArrayList<MultipleChoice>) oStream.readObject();

               //This code generates a random number up to the number of questions available
                number1 = Math.floor(Math.random() * (count)+1);
                //the number is then compared to the ids of the questions and then the information of that question is retrieved
                for (MultipleChoice m : mList) {
                    if (m.getId() == (int) number1) {
                        q1Ta.setText(m.getQuestion());
                        q1O1Rb.setText(m.getOption1());
                        q1O2Rb.setText(m.getOption2());
                        q1O3Rb.setText(m.getOption3());
                        q1O4Rb.setText(m.getOption4());

                        result1 = m.getAnsw();
                        correction1 = m.getCorrection();
                        level1 = m.getLevel();

                    }
                }
                //this code prevents the same question from being generated again
                do{
                    number2 = Math.floor(Math.random() * (count)+1);
                }
                while((int)number2 ==(int)number1);
                
                for (MultipleChoice m : mList) {
                    if (m.getId() == (int) number2) {
                        q2Ta.setText(m.getQuestion());
                        q2O1Rb.setText(m.getOption1());
                        q2O2Rb.setText(m.getOption2());
                        q2O3Rb.setText(m.getOption3());
                        q2O4Rb.setText(m.getOption4());

                        result2 = m.getAnsw();
                        correction2 = m.getCorrection();
                        level2 = m.getLevel();

                    }
                }
                do{
                    number3 = Math.floor(Math.random() * (count)+1);
                }
                while((int)number3 == (int)number1 || (int)number3 == (int)number2);
                
                for (MultipleChoice m : mList) {
                    if (m.getId() == (int) number3) {
                        q3Ta.setText(m.getQuestion());
                        q3O1Rb.setText(m.getOption1());
                        q3O2Rb.setText(m.getOption2());
                        q3O3Rb.setText(m.getOption3());
                        q3O4Rb.setText(m.getOption4());

                        result3 = m.getAnsw();
                        correction3 = m.getCorrection();
                        level3 = m.getLevel();

                    }
                }
                do{
                    number4 = Math.floor(Math.random() * (count)+1);
                }
                while((int)number4 == (int)number1 || (int)number4 == (int)number2 || (int)number4 == (int)number3);
                
                for (MultipleChoice m : mList) {
                    if (m.getId() == (int) number4) {
                        q4Ta.setText(m.getQuestion());
                        q4O1Rb.setText(m.getOption1());
                        q4O2Rb.setText(m.getOption2());
                        q4O3Rb.setText(m.getOption3());
                        q4O4Rb.setText(m.getOption4());

                        result4 = m.getAnsw();
                        correction4 = m.getCorrection();
                        level4 = m.getLevel();

                    }
                }
                do{
                    number5 = Math.floor(Math.random() * (count)+1);
                }
                while((int)number5 == (int)number1 || (int)number5 == (int)number2 || (int)number5 == (int)number3 || (int)number5 == (int)number4);
                
                for (MultipleChoice m : mList) {
                    if (m.getId() == (int) number5) {
                        q5Ta.setText(m.getQuestion());
                        q5O1Rb.setText(m.getOption1());
                        q5O2Rb.setText(m.getOption2());
                        q5O3Rb.setText(m.getOption3());
                        q5O4Rb.setText(m.getOption4());

                        result5 = m.getAnsw();
                        correction5 = m.getCorrection();
                        level5 = m.getLevel();

                    }
                }

                
                oStream.close();
            } catch (IOException e) {
                System.out.println(e);
            } catch (ClassNotFoundException ex) {
                System.out.println(ex);
            }
        } 
        //this code generates true or false questions
        else if (booleanRb.isSelected()) {
            q1O3Rb.setVisible(false);
            q1O4Rb.setVisible(false);
            
            q2O3Rb.setVisible(false);
            q2O4Rb.setVisible(false);
            
            q3O3Rb.setVisible(false);
            q3O4Rb.setVisible(false);
            
            q4O3Rb.setVisible(false);
            q4O4Rb.setVisible(false);
            
            q5O3Rb.setVisible(false);
            q5O4Rb.setVisible(false);
            
            File inFile;
            FileInputStream fStream;
            ObjectInputStream oStream;
            
            int count = 0;
            
            try {
                inFile = new File("outputM.data");
                fStream = new FileInputStream(inFile);
                oStream = new ObjectInputStream(fStream);

                ArrayList<MultipleChoice> mList;
                mList = (ArrayList<MultipleChoice>) oStream.readObject();

                
                for (MultipleChoice m : mList) {
                    count++;
                    }
                
                oStream.close();
            } catch (IOException e) {
                System.out.println(e);
            } catch (ClassNotFoundException ex) {
                System.out.println(ex);
            }

            try {
                inFile = new File("outputT.data");
                fStream = new FileInputStream(inFile);
                oStream = new ObjectInputStream(fStream);

                ArrayList<TrueOrFalse> tList;
                tList = (ArrayList<TrueOrFalse>) oStream.readObject();
                
                number1 = Math.floor(Math.random() * (count)+1);
                
                for(TrueOrFalse t: tList){
                 if (t.getId() == (int) number1) {
                        q1Ta.setText(t.getQuestion());
                        q1O1Rb.setText(t.getOption1());
                        q1O2Rb.setText(t.getOption2());

                        result1 = t.getAnsw();
                        correction1 = t.getCorrection();
                        level1 = t.getLevel();                        

                    }
                }
                do{
                    number2 = Math.floor(Math.random() * (count)+1);
                }
                while((int)number2 ==(int)number1);
                
                for (TrueOrFalse t: tList) {
                    if (t.getId() == (int) number2) {
                        q2Ta.setText(t.getQuestion());
                        q2O1Rb.setText(t.getOption1());
                        q2O2Rb.setText(t.getOption2());
                        
                        result2 = t.getAnsw();
                        correction2 = t.getCorrection();
                        level2 = t.getLevel();

                    }
                }
                do{
                    number3 = Math.floor(Math.random() * (count)+1);
                }
                while((int)number3 == (int)number1 || (int)number3 == (int)number2);
                
                for (TrueOrFalse t: tList) {
                    if (t.getId() == (int) number3) {
                        q3Ta.setText(t.getQuestion());
                        q3O1Rb.setText(t.getOption1());
                        q3O2Rb.setText(t.getOption2());
                       
                        result3 = t.getAnsw();
                        correction3 = t.getCorrection();
                        level3 = t.getLevel();

                    }
                }
                do{
                    number4 = Math.floor(Math.random() * (count)+1);
                }
                while((int)number4 == (int)number1 || (int)number4 == (int)number2 || (int)number4 == (int)number3);
                
                for (TrueOrFalse t: tList) {
                    if (t.getId() == (int) number4) {
                        q4Ta.setText(t.getQuestion());
                        q4O1Rb.setText(t.getOption1());
                        q4O2Rb.setText(t.getOption2());
                       
                        result4 = t.getAnsw();
                        correction4 = t.getCorrection();
                        level4 = t.getLevel();

                    }
                }
                do{
                    number5 = Math.floor(Math.random() * (count)+1);
                }
                while((int)number5 == (int)number1 || (int)number5 == (int)number2 || (int)number5 == (int)number3 || (int)number5 == (int)number4);
                
                for (TrueOrFalse t: tList) {
                    if (t.getId() == (int) number5) {
                        q5Ta.setText(t.getQuestion());
                        q5O1Rb.setText(t.getOption1());
                        q5O2Rb.setText(t.getOption2());
                  
                        result5 = t.getAnsw();
                        correction5 = t.getCorrection();
                        level5 = t.getLevel();

                    }
                }

                oStream.close();
            } catch (IOException e) {
                System.out.println(e);
            } catch (ClassNotFoundException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_tryQuizBtnActionPerformed

    private void manageQBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageQBtnActionPerformed
        // This button sends you to the GUI to manag the questions
        QuestionManagementGUI myGUI = new QuestionManagementGUI();
        myGUI.setVisible(true);
        dispose();

    }//GEN-LAST:event_manageQBtnActionPerformed

    private void q1O1RbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q1O1RbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_q1O1RbActionPerformed

    private void subQuizBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subQuizBtnActionPerformed
        // On submit the answers are compared and if the user has made a msitake a correction to that question is alerted. At the end, the ratio of correct questions and
        //the total score are alerted
        quizTypeLbl.setVisible(true);
        mcqRb.setVisible(true);
        booleanRb.setVisible(true);
        tryQuizBtn.setVisible(true);
        manageQBtn.setVisible(true);
        backBtn.setVisible(true);
        
        
        q1Lbl.setVisible(false);
        q1Ta.setVisible(false);
        q1O1Rb.setVisible(false);
        q1O2Rb.setVisible(false);
        q1O3Rb.setVisible(false);
        q1O4Rb.setVisible(false);
        subQuizBtn.setVisible(false);
        
        int correct = 0;
        int score = 0;
        
        if (q1O1Rb.isSelected() && (q1O1Rb.getText().equalsIgnoreCase(result1))) {
            correct++;
            score = score + level1;
        }
        else if(q1O2Rb.isSelected() && (q1O2Rb.getText().equalsIgnoreCase(result1))) {
            correct++;
            score = score + level1;
        }
        else if(q1O3Rb.isSelected() && (q1O3Rb.getText().equalsIgnoreCase(result1))) {
            correct++;
            score = score + level1;
        }
        else if(q1O4Rb.isSelected() && (q1O4Rb.getText().equalsIgnoreCase(result1))) {
            correct++;
            score = score + level1;
        }
        else{
            JOptionPane.showMessageDialog(null, correction1);
        }
        
        q2Lbl.setVisible(false);
        q2Ta.setVisible(false);
        q2O1Rb.setVisible(false);
        q2O2Rb.setVisible(false);
        q2O3Rb.setVisible(false);
        q2O4Rb.setVisible(false);
        
        if (q2O1Rb.isSelected() && (q2O1Rb.getText().equalsIgnoreCase(result2))) {
            correct++;
            score = score + level2;
        }
        else if(q2O2Rb.isSelected() && (q2O2Rb.getText().equalsIgnoreCase(result2))) {
            correct++;
            score = score + level2;
        }
        else if(q2O3Rb.isSelected() && (q2O3Rb.getText().equalsIgnoreCase(result2))) {
            correct++;
            score = score + level2;
        }
        else if(q2O4Rb.isSelected() && (q2O4Rb.getText().equalsIgnoreCase(result2))) {
            correct++;
            score = score + level2;
        }
        else{
            JOptionPane.showMessageDialog(null, correction2);
        }
        
        q3Lbl.setVisible(false);
        q3Ta.setVisible(false);
        q3O1Rb.setVisible(false);
        q3O2Rb.setVisible(false);
        q3O3Rb.setVisible(false);
        q3O4Rb.setVisible(false);
        
        if (q3O1Rb.isSelected() && (q3O1Rb.getText().equalsIgnoreCase(result3))) {
            correct++;
            score = score + level3;
        }
        else if(q3O2Rb.isSelected() && (q3O2Rb.getText().equalsIgnoreCase(result3))) {
            correct++;
            score = score + level3;
        }
        else if(q3O3Rb.isSelected() && (q3O3Rb.getText().equalsIgnoreCase(result3))) {
            correct++;
            score = score + level3;
        }
        else if(q3O4Rb.isSelected() && (q3O4Rb.getText().equalsIgnoreCase(result3))) {
            correct++;
            score = score + level3;
        }
        else{
            JOptionPane.showMessageDialog(null, correction3);
        }
        
        q4Lbl.setVisible(false);
        q4Ta.setVisible(false);
        q4O1Rb.setVisible(false);
        q4O2Rb.setVisible(false);
        q4O3Rb.setVisible(false);
        q4O4Rb.setVisible(false);
        
        if (q4O1Rb.isSelected() && (q4O1Rb.getText().equalsIgnoreCase(result4))) {
            correct++;
            score = score + level4;
        }
        else if(q4O2Rb.isSelected() && (q4O2Rb.getText().equalsIgnoreCase(result4))) {
            correct++;
            score = score + level4;
        }
        else if(q4O3Rb.isSelected() && (q4O3Rb.getText().equalsIgnoreCase(result4))) {
            correct++;
            score = score + level4;
        }
        else if(q4O4Rb.isSelected() && (q4O4Rb.getText().equalsIgnoreCase(result4))) {
            correct++;
            score = score + level4;
        }
        else{
            JOptionPane.showMessageDialog(null, correction4);
        }
        
        q5Lbl.setVisible(false);
        q5Ta.setVisible(false);
        q5O1Rb.setVisible(false);
        q5O2Rb.setVisible(false);
        q5O3Rb.setVisible(false);
        q5O4Rb.setVisible(false);
        
        if (q5O1Rb.isSelected() && (q5O1Rb.getText().equalsIgnoreCase(result5))) {
            correct++;
            score = score + level5;
        }
        else if(q5O2Rb.isSelected() && (q5O2Rb.getText().equalsIgnoreCase(result5))) {
            correct++;
            score = score + level5;
        }
        else if(q5O3Rb.isSelected() && (q5O3Rb.getText().equalsIgnoreCase(result5))) {
            correct++;
            score = score + level5;
        }
        else if(q5O4Rb.isSelected() && (q5O4Rb.getText().equalsIgnoreCase(result5))) {
            correct++;
            score = score + level5;
        }
        else{
            JOptionPane.showMessageDialog(null, correction5);
        }
        if(correct == 0){
            JOptionPane.showMessageDialog(null, "You got "+correct+" correct answers out of five, but don't give up, the world needs you!");
        }
        else if(correct > 0 && correct < 3){
            JOptionPane.showMessageDialog(null, "You got "+correct+" correct answers out of five, I'm sure you can do it, try again!");
        }
        else if(correct > 2 && correct < 5){
            JOptionPane.showMessageDialog(null, "You got "+correct+" correct answers out of five, well done, you're setting out a great example!");
        }
         else if(correct == 5){
            JOptionPane.showMessageDialog(null, "Congratulation! You got "+correct+" correct answers out of five, let the world know you are doing your part in saving it!");
        }
        JOptionPane.showMessageDialog(null, "Your total score was "+score+"! We've added it to your total score.");
        
        totalScore = totalScore+score;
        
        
    }//GEN-LAST:event_subQuizBtnActionPerformed

    private void q2O1RbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q2O1RbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_q2O1RbActionPerformed

    private void q3O1RbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q3O1RbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_q3O1RbActionPerformed

    private void q4O1RbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q4O1RbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_q4O1RbActionPerformed

    private void q5O1RbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q5O1RbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_q5O1RbActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        ClimateHeroMenuGUI myGUI = new ClimateHeroMenuGUI();
        myGUI.setVisible(true);
        dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClimateHeroQuizGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClimateHeroQuizGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClimateHeroQuizGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClimateHeroQuizGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClimateHeroQuizGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JRadioButton booleanRb;
    private javax.swing.JButton manageQBtn;
    private javax.swing.JRadioButton mcqRb;
    private javax.swing.ButtonGroup options1Bg;
    private javax.swing.ButtonGroup options2Bg;
    private javax.swing.ButtonGroup options3Bg;
    private javax.swing.ButtonGroup options4Bg;
    private javax.swing.ButtonGroup options5Bg;
    private javax.swing.JLabel q1Lbl;
    private javax.swing.JRadioButton q1O1Rb;
    private javax.swing.JRadioButton q1O2Rb;
    private javax.swing.JRadioButton q1O3Rb;
    private javax.swing.JRadioButton q1O4Rb;
    private javax.swing.JLabel q1Ta;
    private javax.swing.JLabel q2Lbl;
    private javax.swing.JRadioButton q2O1Rb;
    private javax.swing.JRadioButton q2O2Rb;
    private javax.swing.JRadioButton q2O3Rb;
    private javax.swing.JRadioButton q2O4Rb;
    private javax.swing.JLabel q2Ta;
    private javax.swing.JLabel q3Lbl;
    private javax.swing.JRadioButton q3O1Rb;
    private javax.swing.JRadioButton q3O2Rb;
    private javax.swing.JRadioButton q3O3Rb;
    private javax.swing.JRadioButton q3O4Rb;
    private javax.swing.JLabel q3Ta;
    private javax.swing.JLabel q4Lbl;
    private javax.swing.JRadioButton q4O1Rb;
    private javax.swing.JRadioButton q4O2Rb;
    private javax.swing.JRadioButton q4O3Rb;
    private javax.swing.JRadioButton q4O4Rb;
    private javax.swing.JLabel q4Ta;
    private javax.swing.JLabel q5Lbl;
    private javax.swing.JRadioButton q5O1Rb;
    private javax.swing.JRadioButton q5O2Rb;
    private javax.swing.JRadioButton q5O3Rb;
    private javax.swing.JRadioButton q5O4Rb;
    private javax.swing.JLabel q5Ta;
    private javax.swing.JLabel quizLbl;
    private javax.swing.JLabel quizTypeLbl;
    private javax.swing.JButton subQuizBtn;
    private javax.swing.JButton tryQuizBtn;
    private javax.swing.ButtonGroup typeBg;
    // End of variables declaration//GEN-END:variables
}
